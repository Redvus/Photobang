/*==============================
=            Layout            =
==============================*/

.wrapper {
	// width: calc(100% - 100px);
	min-height: calc(100vh - (#{$headerWidth} * 2));
	display: block;
	padding: $headerWidth;
	position: relative;
	// margin-bottom: calc(300px + 4rem);
	background-color: $secondary;
	//transition: all .3s;
	// box-shadow: 0 0.3rem 1rem rgba(0, 0, 0, 0.3);
	z-index: 1;
	// animation: fadeIn 0.3s ease-in-out;

	&-error {
		width: 100%;
		min-height: 100vh;
		display: flex;
		align-items: center;
		justify-content: center;
		position: relative;

		&__number {
			width: 40%;
			min-height: 30vh;
			position: relative;

			svg {
				width: 100%;
				height: auto;
				stroke: lighten($secondary, 70%);
				stroke-width: 5;
				fill: none;
				padding: 1rem;
				transition-duration: 0.3s;
			}
		}

		&__text {
			width: 100%;
			min-height: 100vh;
			display: flex;
			align-items: center;
			justify-content: center;
			flex-direction: column;
			position: absolute;
			top: 0;
			left: 0;

			h2 {
				font-size: $font-size-h1;
				animation: fadeIn 3s ease-in-out;
				//animation-delay: 2s;
			}
		}

		&__button {
			width: 100%;
			min-height: 60px;
			display: flex;
			justify-content: center;
			left: 0;
			top: 15vh;
			position: absolute;

			.button-back {
				width: 60px;
				height: 60px;
				display: flex;
				justify-content: center;
				align-items: center;
				position: relative;
				border: 1px solid $primary;
				background-color: $secondary;
				overflow: hidden;
				transition: background-color 0.3s cubic-bezier(.4,0,.2,1);

				&::after {
					content: '';
					//width: 100%;
					//height: 100%;
					top: 0;
					left: 0;
					bottom: 0;
					right: 0;
					position: absolute;
					background-color: $primary;
					z-index: 1;
					//box-sizing: border-box;
					transition: transform 0.45s cubic-bezier(.4,0,.2,1) 75ms;
					transform: scaleX(0);
					transform-origin: center right;
				}

				svg {
					fill: none;
					stroke: $primary;
					stroke-width: 6;
					z-index: 10;
					transition: all 0.3s;
				}

				&:hover {

					svg {
						stroke: $secondary;
						transform: translateX(-5px);
					}

					&::after {
						transform: scaleX(1);
						transition-delay: 0s;
					}
				}
			}
		}
	}

	&-info,
	&-contact,
	&-vendor {
		display: flex;
		flex-direction: row;
	}

    &-category {
        // width: calc(((100% / 4) * 3) + 1.5rem - 50px);
        display: block;
        padding-right: calc(((100% / 4) * 1) + 50px);
    }

    &-cart {
        background-color: $bgColor;
    }

	&--visible {
		animation: translateIn 1.5s ease-in-out;
	}

	@include grid-media($Medium) {

        &-category {
            padding-right: calc(((100% / 3) * 1) + 50px);
        }
	}

	@include grid-media($XSmall) {

		&-category {
            padding-right: calc((100% / 2) * 1);
        }

        &_news {
			padding-right: 0;
		}

        &-contact {
            display: flex;
            flex-direction: column;
        }
	}

	@include grid-media($Small) {
		width: 100%;
        padding: 50px 0;

        &-category {
            overflow: hidden;
        }
	}
}

.filled {
	fill: $primary;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes translateIn {
	from {
		transform: scale(0.7);
		opacity: 0
	}
	to {
		transform: scale(1);
		opacity: 1;
	}
}

/*=====  End of Layout  ======*/


/*==================================
=            Arrow down            =
==================================*/

.arrow-down {
    width: 30px;
    height: 50px;
    display: block;
    // background-color: $secondary;
    // border: 2px solid $primary;
    // border-radius: 20px;
    //border-top-left-radius: 25px;
    //border-top-right-radius: 25px;
    position: absolute;
    margin-left: -5px;
    left: 50%;
    transform: translateX(-50%);
    bottom: 100px;
    z-index: 999;
    animation: fadeIn 1.4s ease-in-out;

    // &:hover {
    //     //border-color: lighten(@brand-primary, 25%);
    // }

    svg {
        width: 30px;
	    height: 50px;
        padding: 5px;

        rect, polyline {
            fill: $secondary;
        }

        #arrowDownMove {
        	stroke: $secondary;
        	stroke-width: 5;
        	fill: none;
        	animation: arrow-down 0.6s infinite alternate ease-out;
        }
    }

    @include grid-media($Small) {
        visibility: hidden;
    }
}

@keyframes arrow-down {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(4px);
    }
}

/*=====  End of Arrow down  ======*/